fluent-bit:
  luaScripts:
    celery.lua: |
      function add_celery_metadata(tag, timestamp, record)
          -- task_id 추출 시도
          local task_id = string.match(record.log, "task_id: ([0-9a-f%-]+)")
          if task_id then
              record.task_id = task_id
          end

          -- latency_s 추출 시도
          local latency = string.match(record.log, "succeeded in ([0-9%.]+)s")
          if latency then
              record.latency_s = latency
          end

          return 2, timestamp, record
      end
  config:

    customParsers: |
      [PARSER]
        Name   app_log_parser
        Format regex
        Regex  ^\[(?<tag>[^\]]+)\]\s(?<message>.*)$
        
      [PARSER]
        Name   celery_log_parser
        Format regex
        Regex  ^\[(?<time>[^\]]+): (?<level>\w+)/(?<processName>[^\]]+)\] (?<message>.*)$

    service: |
      [SERVICE]
        Daemon      Off
        Log_Level   info
        HTTP_Server On
        HTTP_Listen 0.0.0.0
        HTTP_Port   2020
        Parsers_File custom_parsers.conf

    inputs: |
      [INPUT]
        Name              tail
        Path              /var/log/containers/*.log
        multiline.parser  cri
        Tag               kube.*
        Mem_Buf_Limit     5MB

    filters: |
      [FILTER]
        Name          kubernetes
        Match         kube.var.log.containers.*
        Merge_Log     On
        Merge_Log_Key log_processed
        Keep_Log      Off

      [FILTER]
        Name           rewrite_tag
        Match          kube.*
        Rule       $kubernetes['container_name'] ^model-worker$ kube.model-worker false
        Rule       $kubernetes['container_name'] ^model-api$ kube.model-api false
        Emitter_Name  re_emitted

      [FILTER]
        Name           parser
        Match          celery.logs
        Key_Name       log
        Parser         celery_log_parser
        Reserve_Data   On

      [FILTER]
        Name           parser
        Match          app.logs
        Key_Name       logs
        Parser         app_log_parser
        Reserve_Data   On

      [FILTER]
          Name         lua
          Match        celery.logs
          script       /fluent-bit/scripts/celery.lua
          call         add_celery_metadata
    outputs: |
      [OUTPUT]
        Name        loki
        Match       *
        Host        loki-distributor.loki.svc.cluster.local
        Port        3100
        label_keys  $kubernetes['container_name'], $level
        line_format json